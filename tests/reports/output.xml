<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.8.2 on win32)" generated="20220714 17:40:17.029" rpa="false" schemaversion="3">
<suite id="s1" name="Base" source="C:\Users\Pichau\Desktop\RoboTron_Manuel_Valdes_Projeto_Final\tests\base.robot">
<test id="s1-t1" name="Cenario: GET todos os produtos 200" line="49">
<kw name="Criar Sessao">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>http://localhost:3000/</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220714 17:40:17.143" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220714 17:40:17.143" endtime="20220714 17:40:17.143"/>
</kw>
<status status="PASS" starttime="20220714 17:40:17.143" endtime="20220714 17:40:17.143"/>
</kw>
<kw name="GET Endpoint /produtos" library="produtos_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220714 17:40:17.153" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220714 17:40:17.153" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '5044434c-59b1-4824-b6f6-7b9fdf3a99c0', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3196', 'Date': 'Thu, 14 Jul 2022 20:40:17 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 17,
    "produtos": [
        {
            "nome": "MouseTech",
            "preco": 400,
            "descricao": "Mouse",
            "quantidade": 100,
            "_id": "5Faw2L5bzMBBXvpZ"
        },
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "Processador",
            "preco": 900,
            "descricao": "i7",
            "quantidade": 100,
            "_id": "C2GIepDF2gPm0IkI"
        },
        {
            "nome": "Notebookssons",
            "preco": 1900,
            "descricao": "Lenovinhobrau",
            "quantidade": 100,
            "_id": "CeoTlB4JA57Xmq5f"
        },
        {
            "nome": "microondass",
            "preco": 900,
            "descricao": "quente",
            "quantidade": 10,
            "_id": "DtY6V3pzy5zfN2bQ"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "Lonitor",
            "preco": 700,
            "descricao": "HDi",
            "quantidade": 200,
            "_id": "PKSG8mf65cZcu82S"
        },
        {
            "nome": "Notebook",
            "preco": 1700,
            "descricao": "Lenovo",
            "quantidade": 200,
            "_id": "TqbHXmq72RyPNUVJ"
        },
        {
            "nome": "Processadores",
            "preco": 900,
            "descricao": "i7",
            "quantidade": 100,
            "_id": "V0AFZVtKq19l0aaf"
        },
        {
            "nome": "Televisão",
            "preco": 1300,
            "descricao": "Full HD",
            "quantidade": 100,
            "_id": "VSIXQ6vHdORHfe5V"
        },
        {
            "nome": "Computador",
            "preco": 9000,
            "descricao": "i9",
            "quantidade": 100,
            "_id": "ZDFa7l0ePh4kZIwO"
        },
        {
            "nome": "pneu",
            "preco": 1800,
            "descricao": "caro",
            "quantidade": 100,
            "_id": "ZWDwaUrRMj5trwx0"
        },
        {
            "nome": "Monitor",
            "preco": 900,
            "descricao": "HD",
            "quantidade": 200,
            "_id": "gOzETHlG0eJlbYrt"
        },
        {
            "nome": "microondasss",
            "preco": 9500,
            "descricao": "quente",
            "quantidade": 10,
            "_id": "l6GL9zR4bn22UKSY"
        },
        {
            "nome": "Notebookss",
            "preco": 1700,
            "descricao": "Lenovinho",
            "quantidade": 100,
            "_id": "vUvXRM59LzTlAff2"
        },
        {
            "nome": "microondas",
            "preco": 800,
            "descricao": "quente",
            "quantidade": 10,
            "_id": "wRCQD617RaLCu2zL"
        },
        {
            "nome": "Lonitores",
            "preco": 700,
            "descricao": "HDis",
            "quantidade": 200,
            "_id": "y0V52mjCuyVodvgC"
        }
    ]
} 
 </msg>
<msg timestamp="20220714 17:40:17.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 17:40:17.144" endtime="20220714 17:40:17.153"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220714 17:40:17.153" endtime="20220714 17:40:17.155"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220714 17:40:17.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 17:40:17.155" endtime="20220714 17:40:17.155"/>
</kw>
<status status="PASS" starttime="20220714 17:40:17.144" endtime="20220714 17:40:17.156"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220714 17:40:17.156" endtime="20220714 17:40:17.157"/>
</kw>
<status status="PASS" starttime="20220714 17:40:17.156" endtime="20220714 17:40:17.157"/>
</kw>
<kw name="Printar Conteudo Response" library="usuarios_keywords">
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220714 17:40:17.158" endtime="20220714 17:40:17.158"/>
</kw>
<status status="PASS" starttime="20220714 17:40:17.157" endtime="20220714 17:40:17.158"/>
</kw>
<tag>GETPRODUTO</tag>
<status status="PASS" starttime="20220714 17:40:17.142" endtime="20220714 17:40:17.158"/>
</test>
<doc>Arquivo simples para requisições HTTP em APIs</doc>
<status status="PASS" starttime="20220714 17:40:17.030" endtime="20220714 17:40:17.159"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">GETPRODUTO</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Base">Base</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
