<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.8.2 on win32)" generated="20220719 19:01:49.368" rpa="false" schemaversion="3">
<suite id="s1" name="Produtos Tests" source="C:\Users\Pichau\Desktop\RoboTron_Manuel_Valdes_Projeto_Final\tests\produtos_tests.robot">
<kw name="Criar Sessao" library="base" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>${base_uri}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220719 19:01:49.811" level="INFO">Creating Session using : alias=serverest, url=http://localhost:3000/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220719 19:01:49.811" endtime="20220719 19:01:49.811"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.811" endtime="20220719 19:01:49.811"/>
</kw>
<test id="s1-t1" name="Cenario: GET todos os produtos 200" line="9">
<kw name="GET Endpoint /produtos" library="produtos_keywords">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220719 19:01:49.827" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220719 19:01:49.827" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '952c2349-3b4c-4654-93a8-0d9a058a9fc7', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '5580', 'Date': 'Tue, 19 Jul 2022 22:01:49 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 28,
    "produtos": [
        {
            "nome": "Larry Bell",
            "preco": 2980,
            "descricao": "Staff example drive.",
            "quantidade": 963,
            "_id": "1ynovcIBpauWOOj1"
        },
        {
            "nome": "Anne Freeman",
            "preco": 3554,
            "descricao": "Improve head everything wait wear garden force.",
            "quantidade": 982,
            "_id": "4GvsBgipvH9uecxo"
        },
        {
            "nome": "MouseTech",
            "preco": 400,
            "descricao": "Mouse",
            "quantidade": 100,
            "_id": "5Faw2L5bzMBBXvpZ"
        },
        {
            "nome": "Cassie Hobbs",
            "preco": 4516,
            "descricao": "Sport will up professor green certain task.",
            "quantidade": 745,
            "_id": "6z0WYXoWag9QBKgo"
        },
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "Processador",
            "preco": 900,
            "descricao": "i7",
            "quantidade": 100,
            "_id": "C2GIepDF2gPm0IkI"
        },
        {
            "nome": "Notebookssons",
            "preco": 1900,
            "descricao": "Lenovinhobrau",
            "quantidade": 100,
            "_id": "CeoTlB4JA57Xmq5f"
        },
        {
            "nome": "microondass",
            "preco": 900,
            "descricao": "quente",
            "quantidade": 10,
            "_id": "DtY6V3pzy5zfN2bQ"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "Lonitor",
            "preco": 700,
            "descricao": "HDi",
            "quantidade": 200,
            "_id": "PKSG8mf65cZcu82S"
        },
        {
            "nome": "Notebook",
            "preco": 1700,
            "descricao": "Lenovo",
            "quantidade": 200,
            "_id": "TqbHXmq72RyPNUVJ"
        },
        {
            "nome": "Processadores",
            "preco": 900,
            "descricao": "i7",
            "quantidade": 100,
            "_id": "V0AFZVtKq19l0aaf"
        },
        {
            "nome": "Televis√£o",
            "preco": 1300,
            "descricao": "Full HD",
            "quantidade": 100,
            "_id": "VSIXQ6vHdORHfe5V"
        },
        {
            "nome": "Computador",
            "preco": 9000,
            "descricao": "i9",
            "quantidade": 100,
            "_id": "ZDFa7l0ePh4kZIwO"
        },
        {
            "nome": "pneu",
            "preco": 1800,
            "descricao": "caro",
            "quantidade": 100,
            "_id": "ZWDwaUrRMj5trwx0"
        },
        {
            "nome": "Stephanie Price",
            "preco": 435,
            "descricao": "Wish treat international article base could work mean.",
            "quantidade": 688,
            "_id": "aML8aZc6EF8fy5kn"
        },
        {
            "nome": "Tammy Flynn",
            "preco": 3057,
            "descricao": "Month decide majority father.",
            "quantidade": 74,
            "_id": "fopwm6b8vTE7sOE0"
        },
        {
            "nome": "Monitor",
            "preco": 900,
            "descricao": "HD",
            "quantidade": 200,
            "_id": "gOzETHlG0eJlbYrt"
        },
        {
            "nome": "Miguel Bishop",
            "preco": 1696,
            "descricao": "Resource benefit nothing rest behind cold Mrs.",
            "quantidade": 437,
            "_id": "hAH0i59LmtzCTzgK"
        },
        {
            "nome": "Jay Glenn",
            "preco": 1049,
            "descricao": "Treatment watch floor clear model.",
            "quantidade": 583,
            "_id": "i1Lp5VxmVUny52SH"
        },
        {
            "nome": "George Rodriguez",
            "preco": 177,
            "descricao": "Forget partner white TV.",
            "quantidade": 911,
            "_id": "iblK6XyPQD8EZSU7"
        },
        {
            "nome": "Zachary Jackson",
            "preco": 3202,
            "descricao": "Production attorney inside early itself concern.",
            "quantidade": 570,
            "_id": "jlDv1zfsJ3heJgMQ"
        },
        {
            "nome": "microondasss",
            "preco": 9500,
            "descricao": "quente",
            "quantidade": 10,
            "_id": "l6GL9zR4bn22UKSY"
        },
        {
            "nome": "carro",
            "preco": 18000,
            "descricao": "fiat",
            "quantidade": 5,
            "_id": "lj4mWnLeJAZMxB1K"
        },
        {
            "nome": "Cindy Flores",
            "preco": 4513,
            "descricao": "Travel about white assume consider win.",
            "quantidade": 632,
            "_id": "m7QqV9wTquvCwcbT"
        },
        {
            "nome": "Notebookss",
            "preco": 1700,
            "descricao": "Lenovinho",
            "quantidade": 100,
            "_id": "vUvXRM59LzTlAff2"
        },
        {
            "nome": "microondas",
            "preco": 800,
            "descricao": "quente",
            "quantidade": 10,
            "_id": "wRCQD617RaLCu2zL"
        },
        {
            "nome": "Lonitores",
            "preco": 700,
            "descricao": "HDis",
            "quantidade": 200,
            "_id": "y0V52mjCuyVodvgC"
        }
    ]
} 
 </msg>
<msg timestamp="20220719 19:01:49.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220719 19:01:49.811" endtime="20220719 19:01:49.827"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220719 19:01:49.827" endtime="20220719 19:01:49.827"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220719 19:01:49.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220719 19:01:49.827" endtime="20220719 19:01:49.827"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.811" endtime="20220719 19:01:49.827"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220719 19:01:49.827" endtime="20220719 19:01:49.827"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.827" endtime="20220719 19:01:49.827"/>
</kw>
<tag>GETPRODUTO</tag>
<status status="PASS" starttime="20220719 19:01:49.811" endtime="20220719 19:01:49.827"/>
</test>
<test id="s1-t2" name="Cenario: POST criar produto 201" line="14">
<kw name="Criar Dados Produto Valido" library="dynamics">
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220719 19:01:49.827" level="INFO">${nome} = Sally Williams</msg>
<status status="PASS" starttime="20220719 19:01:49.827" endtime="20220719 19:01:49.827"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${preco}</var>
<arg>max=5000</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220719 19:01:49.827" level="INFO">${preco} = 3946</msg>
<status status="PASS" starttime="20220719 19:01:49.827" endtime="20220719 19:01:49.827"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${descricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20220719 19:01:49.827" level="INFO">${descricao} = Parent draw government during from less.</msg>
<status status="PASS" starttime="20220719 19:01:49.827" endtime="20220719 19:01:49.827"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>max=999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220719 19:01:49.842" level="INFO">${quantidade} = 909</msg>
<status status="PASS" starttime="20220719 19:01:49.827" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<arg>nome=${nome}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220719 19:01:49.842" level="INFO">${produtos} = {'nome': 'Sally Williams', 'preco': 3946, 'descricao': 'Parent draw government during from less.', 'quantidade': 909}</msg>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${produtos}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${produtos}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220719 19:01:49.842" level="INFO">${produtos} = {'nome': 'Sally Williams', 'preco': 3946, 'descricao': 'Parent draw government during from less.', 'quantidade': 909}</msg>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.827" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Fazer Login e Armazenar Token" library="login_keywords">
<kw name="POST Endpoint /login" library="login_keywords">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{payload}</var>
<arg>email=${email_para_login}</arg>
<arg>password=${password_para_login}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220719 19:01:49.842" level="INFO">&amp;{payload} = { email=fulano@qa.com | password=teste }</msg>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>data=&amp;{payload}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220719 19:01:49.842" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '36', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=email=fulano%40qa.com&amp;password=teste 
 </msg>
<msg timestamp="20220719 19:01:49.842" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8f65f904-873d-4dc7-865c-a49c2477fd48', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '265', 'Date': 'Tue, 19 Jul 2022 22:01:49 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjU4MjY4MTA5LCJleHAiOjE2NTgyNjg3MDl9.ccuBMyHaZNANrMkqYeaOlM2FEGBnrzl8D3G9mewtBB8"
} 
 </msg>
<msg timestamp="20220719 19:01:49.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220719 19:01:49.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Validar Login" library="login_keywords">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Login realizado com sucesso</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()["authorization"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220719 19:01:49.842" level="INFO">Length is 192</msg>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${token_auth}</var>
<arg>${response.json()["authorization"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220719 19:01:49.842" level="INFO">${token_auth} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjU4MjY4MTA5LCJleHAiOjE2NTgyNjg3MDl9.ccuBMyHaZNANrMkqYeaOlM2FEGBnrzl8D3G9mewtBB8</msg>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Token Salvo: ${token_auth}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token_auth}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220719 19:01:49.842" level="INFO">${token_auth} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjU4MjY4MTA5LCJleHAiOjE2NTgyNjg3MDl9.ccuBMyHaZNANrMkqYeaOlM2FEGBnrzl8D3G9mewtBB8</msg>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.842"/>
</kw>
<kw name="POST Endpoint /produtos" library="produtos_keywords">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{header}</var>
<arg>Authorization=${token_auth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220719 19:01:49.858" level="INFO">&amp;{header} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjU4MjY4MTA5LCJleHAiOjE2NTgyNjg3MDl9.ccuBMyHaZNANrMkqYeaOlM2FEGBnrzl8D3G...</msg>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>data=${produtos}</arg>
<arg>headers=${header}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220719 19:01:49.858" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjU4MjY4MTA5LCJleHAiOjE2NTgyNjg3MDl9.ccuBMyHaZNANrMkqYeaOlM2FEGBnrzl8D3G9mewtBB8', 'Content-Length': '96', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Sally+Williams&amp;preco=3946&amp;descricao=Parent+draw+government+during+from+less.&amp;quantidade=909 
 </msg>
<msg timestamp="20220719 19:01:49.858" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3cf2b53a-6bc3-4504-b85d-3bbeafaf5fda', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Tue, 19 Jul 2022 22:01:49 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ORucKHXoWuEuCFVK"
} 
 </msg>
<msg timestamp="20220719 19:01:49.858" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220719 19:01:49.858" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.842" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<tag>POSTPRODUTO</tag>
<status status="PASS" starttime="20220719 19:01:49.827" endtime="20220719 19:01:49.858"/>
</test>
<test id="s1-t3" name="Cenario: PUT editar produto 200" line="21">
<kw name="Criar Dados Produto Valido" library="dynamics">
<kw name="Name" library="FakerLibrary">
<var>${nome}</var>
<doc>:example 'John Doe'</doc>
<msg timestamp="20220719 19:01:49.858" level="INFO">${nome} = Daniel Walsh</msg>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${preco}</var>
<arg>max=5000</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220719 19:01:49.858" level="INFO">${preco} = 524</msg>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${descricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20220719 19:01:49.858" level="INFO">${descricao} = Pm husband happen.</msg>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="Random Int" library="FakerLibrary">
<var>${quantidade}</var>
<arg>max=999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20220719 19:01:49.858" level="INFO">${quantidade} = 681</msg>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<arg>nome=${nome}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220719 19:01:49.858" level="INFO">${produtos} = {'nome': 'Daniel Walsh', 'preco': 524, 'descricao': 'Pm husband happen.', 'quantidade': 681}</msg>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${produtos}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${produtos}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220719 19:01:49.858" level="INFO">${produtos} = {'nome': 'Daniel Walsh', 'preco': 524, 'descricao': 'Pm husband happen.', 'quantidade': 681}</msg>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="PUT Endpoint /produtos" library="produtos_keywords">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{header}</var>
<arg>Authorization=${token_auth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220719 19:01:49.858" level="INFO">&amp;{header} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjU4MjY4MTA5LCJleHAiOjE2NTgyNjg3MDl9.ccuBMyHaZNANrMkqYeaOlM2FEGBnrzl8D3G...</msg>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.858"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos/${response.json()["_id"]}</arg>
<arg>data=${produtos}</arg>
<arg>headers=${header}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220719 19:01:49.874" level="INFO">PUT Request : url=http://localhost:3000/produtos/ORucKHXoWuEuCFVK 
 path_url=/produtos/ORucKHXoWuEuCFVK 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjU4MjY4MTA5LCJleHAiOjE2NTgyNjg3MDl9.ccuBMyHaZNANrMkqYeaOlM2FEGBnrzl8D3G9mewtBB8', 'Content-Length': '71', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Daniel+Walsh&amp;preco=524&amp;descricao=Pm+husband+happen.&amp;quantidade=681 
 </msg>
<msg timestamp="20220719 19:01:49.874" level="INFO">PUT Response : url=http://localhost:3000/produtos/ORucKHXoWuEuCFVK 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '809be361-42d8-459f-8bb7-4d1f6d47f939', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Tue, 19 Jul 2022 22:01:49 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20220719 19:01:49.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.874"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220719 19:01:49.874" endtime="20220719 19:01:49.874"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220719 19:01:49.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220719 19:01:49.874" endtime="20220719 19:01:49.874"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.874"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<kw name="Should Be True" library="BuiltIn">
<arg>${response.status_code} == ${statuscode}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220719 19:01:49.874" endtime="20220719 19:01:49.874"/>
</kw>
<status status="PASS" starttime="20220719 19:01:49.874" endtime="20220719 19:01:49.874"/>
</kw>
<tag>PUTPRODUTO</tag>
<status status="PASS" starttime="20220719 19:01:49.858" endtime="20220719 19:01:49.874"/>
</test>
<test id="s1-t4" name="Cenario: DELETE excluir produto 200" line="28">
<kw name="DELETE Endpoint /produtos" library="produtos_keywords">
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos/${response.json()["_id"]}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220719 19:01:49.874" level="FAIL">Resolving variable '${response.json()["_id"]}' failed: KeyError: '_id'</msg>
<status status="FAIL" starttime="20220719 19:01:49.874" endtime="20220719 19:01:49.874"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220719 19:01:49.874" endtime="20220719 19:01:49.874"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20220719 19:01:49.874" endtime="20220719 19:01:49.874"/>
</kw>
<status status="FAIL" starttime="20220719 19:01:49.874" endtime="20220719 19:01:49.874"/>
</kw>
<kw name="Validar Status Code &quot;200&quot;" library="common" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220719 19:01:49.874" endtime="20220719 19:01:49.874"/>
</kw>
<tag>DELETEPRODUTO</tag>
<status status="FAIL" starttime="20220719 19:01:49.874" endtime="20220719 19:01:49.874">Resolving variable '${response.json()["_id"]}' failed: KeyError: '_id'</status>
</test>
<doc>Arquivo de testes para o endpoint /produtos</doc>
<status status="FAIL" starttime="20220719 19:01:49.368" endtime="20220719 19:01:49.874"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">DELETEPRODUTO</stat>
<stat pass="1" fail="0" skip="0">GETPRODUTO</stat>
<stat pass="1" fail="0" skip="0">POSTPRODUTO</stat>
<stat pass="1" fail="0" skip="0">PUTPRODUTO</stat>
</tag>
<suite>
<stat pass="3" fail="1" skip="0" id="s1" name="Produtos Tests">Produtos Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
